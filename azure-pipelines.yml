pool:
  vmImage: ubuntu-latest

stages:
- stage: SAST 
  jobs:
  - job: SAST
    displayName: 'SAST'
    steps:

    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '*/surefire-reports/TEST-.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false   

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonar-conexion2'
        organization: 'cristobalfajardo'
        projectKey: 'CristobalFajardo_spring-boot-kubernetes'
        projectName: 'cristobalfajardo'
        
    - task: CopyFiles@2
      displayName: Copiar archivos
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: |
            **/build/libs/*.jar
            **/build/**/*.xml
        targetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: Publica artefactos
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: appJar
        publishLocation: 'Container'
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonar-conexion2'
        organization: 'cristobalfajardo'
        projectKey: 'CristobalFajardo_spring-boot-kubernetes'
        projectName: 'cristobalfajardo'
        extraProperties: |
          sonar.coverage.jacoco.xmlReportPaths=$(Pipeline.Workspace)/appJar/build/reports/jacoco/test/jacocoTestReport.xml
      displayName: 'Jacoco Preparing Sonarqube Environment'
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        isJacocoCoverageReportXML: true
        sqMavenPluginVersionChoice: 'latest'
   #- task: Gradle@3
   #   displayName: 'Analyze current Branch'
   #   inputs:
   #     gradleWrapperFile: 'gradlew'
    #    tasks: "sonarqube"
    #    javaHomeOption: 'JDKVersion'
    #    sonarQubeRunAnalysis: true
    #    sqGradlePluginVersionChoice: 'specify'
    #    sonarQubeGradlePluginVersion: '3.3'
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish Analysis Results'

    - task: sonarcloud-buildbreaker@2
      inputs:
        SonarCloud: 'sonar-conexion2'
        organization: 'cristobalfajardo'

##
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '*/surefire-reports/TEST-.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        sonarQubeRunAnalysis: true
- stage: SCA 
  jobs:
  - job: SCA
    displayName: 'SCA'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '*/surefire-reports/TEST-.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    #- task: SonarCloudPrepare@1
    #  inputs:
    #    SonarCloud: 'sonar-conexion2'
    #    organization: 'cristobalfajardo'
    #    projectKey: 'CristobalFajardo_spring-boot-kubernetes'
    #    projectName: 'cristobalfajardo'
    

    #- task: Maven@3
    #  inputs:
    #    mavenPomFile: 'pom.xml'
    #    publishJUnitResults: true
    #    testResultsFiles: '*/surefire-reports/TEST-.xml'
    #    javaHomeOption: 'JDKVersion'
    #    mavenVersionOption: 'Default'
    #    sonarQubeRunAnalysis: true
    - task: dependency-check-build-task@6
      inputs:
        projectName: 'spring-boot-kubernetes'
        scanPath: '$(Build.ArtifactStagingDirectory)'
        format: 'HTML'

    #- task: DockerInstaller@0
    #  inputs:
    #    dockerVersion: '17.09.0-ce'

    #- task: Docker@2
    #  inputs:
    #    containerRegistry: 'Docker'
    #    command: 'login'
    #- task: Docker@2
    #  inputs:
    #    containerRegistry: 'Docker'
    #    repository: 'cristobalfajardo/devops-cristobal2'
    #    command: 'build'
    #    Dockerfile: '**/Dockerfile'
    #    tags: latest
    #  displayName: Build Image
      
- stage: ContainerSecurity 
  jobs:
  - job: ContainerSecurity
    displayName: 'ContainerSecurity'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '*/surefire-reports/TEST-.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    #- task: Maven@3
     # inputs:
      #  mavenPomFile: 'pom.xml'
       # publishJUnitResults: true
       # testResultsFiles: '*/surefire-reports/TEST-.xml'
       # javaHomeOption: 'JDKVersion'
       # mavenVersionOption: 'Default'
       # sonarQubeRunAnalysis: true

    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        command: 'login'
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'cristobalfajardo/devops-cristobal2'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: latest
      displayName: Build Image

    - script: | 
        sudo apt-get install -y rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
        trivy image cristobalfajardo/devops-cristobal2:latest
      displayName: Image Scan

    - task: Docker@2
      displayName: Docker push
      inputs:
        containerRegistry: 'Docker'
        repository: 'cristobalfajardo/devops-cristobal2'
        command: 'push'
        tags: 'latest'